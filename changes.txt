2018-05-31:
- Fixed bug present since migration to Python 3 (due to altered behaviour of map())
  that truncated interpoint distance columns in interpoint summary to the length of
  the column with fewest rows (only of concern when random points were used).
2018-05-25:
- Fixed bug introduced in version 1.2.0 that caused the calculation of particle area
  density in the profile summary to not exclude holes from the total area.
2018-05-24:
- Fixed a fatal bug introduced by migration to Python 3 that caused failure
  to process files if a log file was not already present.
- Fixed the "_csv_writer object has no 'close' attribute" bug, so csv files
  can now be saved again.
- file_io.read_file() again had started to trigger errors when encountering
  non-ASCII characters, probably since after the migration to Python 3. This
  has now been fixed, such that coordinate files are opened using
  OS/locale-specific encoding, with the 'surrogateescape' option to tolerate
  some decoding errors.
2018-04-20:
- Added Feret diameter to profile output.
- Minor bug fixes and code cleanup.
2018-04-19:
- Now works with Python 3 instead of Python 2.
2015-04-16:
- Bug fixes.
2015-01-14:
- Fixed Monte Carlo simulations that had been broken in a previous version.
- Monte Carlo simulation windows should now work as expected.
- Removed the strict localization option when using simulation window "profile +
  shell".
- Most functions in class ProfileData are now semiprivate.
- Further code cleanup.
- Various other small changes and bug fixes.
2014-11-11:
- A rather comprehensive code cleanup.
- Various other small changes and bug fixes.
- License changed to the MIT license.
2014-05-14:
- In the output files for random and grid points, output values were for the
  'real' point list rather than for the random or grid point lists. This has now
  been fixed.
- For Monte Carlo simulations, fixed a bug that caused simulated particles within
  profile holes to be accepted as valid when simulation window was set to
  "profile + shell".
- View file dialog is now properly destroyed when closed.
- PyExcelerator is again included in the Window binaries.
2014-01-24:
- Fixed a bug that caused a failure to execute when using the latest version
  of wxPython. 
2012-07-12:
- Fixed a bug, reported by Megan Dowie, that generated an error when trying to 
  calculate interpoint distances from an input file that does not contain random 
  points.
2011-10-14:
- Fixed a bug that caused the number of holes to always be shown as 0 in the
  log, and prevented them from being validated with respect to crossing 
  vertices (the holes were correctly accounted for in the output data though).
- Fixed a bug that prevented certain options that should be reset between runs
  from actually being so.
2010-10-07:
- Allows PARTICLES as a synonym for the keyword POINTS in coordinate files to
  accommodate for an old plugin (ParticleDensityRandomBox).
2010-09-02:
- Fixed a bug that prevented some options from being loaded from the
  configuration file.
2010-08-17:
- Because also random points and other particle-like points are instances of the
  Particle class, this class was for clarity renamed Point. At the same time the
  import method of the geometry module was changed, so that objects in this
  module (including the geometry.Point class) are accessed using geometry.*.
- Fixed a bug where simulated-particle and particle-simulated interpoint
  distances were never saved to output files.
2010-07-05:
- Implemented a number of things from Synapse.py, including interpoint distances
  between points and simulated points, and the option to specify Monte Carlo
  simulation window.
- Now saves current input directory to a config file named '.pointdensity.cfg'
  in the user's home directory.
- Current options can also be saved to '.pointdensity.cfg'. Options specified
  in that file will be loaded when the program is started.
- "Skipping distance" was renamed "Shell width".
- The processing now takes place in a separate thread; while processing, a
  progress dialog is shown which allows for cancellation of the processing.
- A number of minor bug fixes and other changes aimed at simplifying the code.

